Metadata-Version: 2.1
Name: yumi_jacobi
Version: 0.0.1
Summary: YuMi with Jacobi Robotics Motion Planning thru EGM and Robot Web Services (RWS) gripper control for YuMi smart grippers
Home-page: https://github.com/BerkeleyAutomation/yumi_jacobi
Author: Justin Yu
Author-email: yujustin@berkeley.edu
License: MIT Software License
Keywords: robotics grasping
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT Software License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Natural Language :: English
Classifier: Topic :: Scientific/Engineering
Requires-Dist: numpy
Requires-Dist: autolab-core
Requires-Dist: abb_librws@ file://localhost/home/justinyu/multicable-decluttering/yumi_jacobi/extern/abb_librws

# ABB YuMi IRB 14000 Jacobi Motion Wrapper

Author: Justin Yu
yujustin@berkeley.edu

This YuMi wapper uses the cloud C++ version of the **Jacobi Motion Library** for robot motion planning. Jacobi Motion provides a clean API for efficient algorithms that compute time-optimized, jerk-limited robot arm trajectories in milliseconds.

For instructions regrading installation, getting started, and for general documentation refer to [docs.jacobirobotics.com](https://docs.jacobirobotics.com).

## Installation
The Jacobi Cloud Python package can be installed from PyPI via

> pip install jacobi-motion

In case no package could be found, make sure to upgrade pip to the latest available version via pip install pip --upgrade.


## License
The Cloud version requires an API key for authentication that you can access at your user account at account.jacobirobotics.com. You can pass this to the motion library by setting the JACOBI_API_KEY and JACOBI_API_SECRET environment variable.
